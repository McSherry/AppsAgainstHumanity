<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAnwAAAAAAAAAAAAAAAAAAAIAAAAD4AAAACwAAADkAAAD/AAAAQAAA
        AAAAAAAAAAAAAAAAAABVVVUPtra2/v////////////////////+0tLT/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADFAAAAAAAAAAAAAAAAAAAARAAAAP8AAAAyAAAATgAA
        AP8AAAAdAAAAAAAAAAAAAAAAAAAAAEZGRkXe3t7//////////////////////+Pj4/8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPIAAAAKAAAAAAAAAAAAAAArAAAA/wAA
        AEcAAABjAAAA/wAAAAcAAAAAAAAAAAAAAAAAAAAANTU1Zv39/f///////////////////////////w4O
        Dv8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA6wAAADEAAAAAAAAAAAAA
        AA4AAAD/AAAAXAAAAGMAAAD/AAAABwAAAAAAAAAAAAAAAAAAAAB5eXmc////////////////////////
        ////////QUFB/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAVAAA
        AAAAAAAAAAAADgAAAP8AAABVAAAATgAAAP8AAAAdAAAAAAAAAAAAAAAAAAAAAJCQkL3/////////////
        //////////////////9kZGT/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAB4AAAAAAAAAAAAAAArAAAA/wAAAEAAAAA5AAAA/wAAAEAAAAAAAAAAAAAAAAAAAAAAqamp9P//
        /////////////////////////////6CgoP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAKwAAAAAAAAAAAAAAEcAAAD/AAAAKwAAAAcAAAD4AAAAgAAAAAAAAAAAAAAAAFtb
        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
        /8/5//+f/P//P/4//H//j/H//+OH//////8=
</value>
  </data>
</root>